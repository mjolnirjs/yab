!(function(e, t) {
  'object' == typeof exports && 'object' == typeof module
    ? (module.exports = t())
    : 'function' == typeof define && define.amd
    ? define([], t)
    : 'object' == typeof exports
    ? (exports['yab-fetch-logger'] = t())
    : (e['yab-fetch-logger'] = t());
})(window, function() {
  return (function(e) {
    var t = {};
    function n(r) {
      if (t[r]) return t[r].exports;
      var o = (t[r] = { i: r, l: !1, exports: {} });
      return e[r].call(o.exports, o, o.exports, n), (o.l = !0), o.exports;
    }
    return (
      (n.m = e),
      (n.c = t),
      (n.d = function(e, t, r) {
        n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: r });
      }),
      (n.r = function(e) {
        'undefined' != typeof Symbol &&
          Symbol.toStringTag &&
          Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
          Object.defineProperty(e, '__esModule', { value: !0 });
      }),
      (n.t = function(e, t) {
        if ((1 & t && (e = n(e)), 8 & t)) return e;
        if (4 & t && 'object' == typeof e && e && e.__esModule) return e;
        var r = Object.create(null);
        if (
          (n.r(r),
          Object.defineProperty(r, 'default', { enumerable: !0, value: e }),
          2 & t && 'string' != typeof e)
        )
          for (var o in e)
            n.d(
              r,
              o,
              function(t) {
                return e[t];
              }.bind(null, o)
            );
        return r;
      }),
      (n.n = function(e) {
        var t =
          e && e.__esModule
            ? function() {
                return e.default;
              }
            : function() {
                return e;
              };
        return n.d(t, 'a', t), t;
      }),
      (n.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t);
      }),
      (n.p = ''),
      n((n.s = 0))
    );
  })([
    function(e, t, n) {
      e.exports = n(1);
    },
    function(e, t, n) {
      'use strict';
      n.r(t);
      n.d(t, 'createLogger', function() {
        return u;
      });
      var r = function(e, t, n, r) {
          return new (n || (n = Promise))(function(o, u) {
            function c(e) {
              try {
                i(r.next(e));
              } catch (e) {
                u(e);
              }
            }
            function l(e) {
              try {
                i(r.throw(e));
              } catch (e) {
                u(e);
              }
            }
            function i(e) {
              e.done
                ? o(e.value)
                : new n(function(t) {
                    t(e.value);
                  }).then(c, l);
            }
            i((r = r.apply(e, t || [])).next());
          });
        },
        o = function(e, t) {
          var n,
            r,
            o,
            u,
            c = {
              label: 0,
              sent: function() {
                if (1 & o[0]) throw o[1];
                return o[1];
              },
              trys: [],
              ops: []
            };
          return (
            (u = { next: l(0), throw: l(1), return: l(2) }),
            'function' == typeof Symbol &&
              (u[Symbol.iterator] = function() {
                return this;
              }),
            u
          );
          function l(u) {
            return function(l) {
              return (function(u) {
                if (n) throw new TypeError('Generator is already executing.');
                for (; c; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (o =
                          2 & u[0]
                            ? r.return
                            : u[0]
                            ? r.throw || ((o = r.return) && o.call(r), 0)
                            : r.next) &&
                        !(o = o.call(r, u[1])).done)
                    )
                      return o;
                    switch (((r = 0), o && (u = [2 & u[0], o.value]), u[0])) {
                      case 0:
                      case 1:
                        o = u;
                        break;
                      case 4:
                        return c.label++, { value: u[1], done: !1 };
                      case 5:
                        c.label++, (r = u[1]), (u = [0]);
                        continue;
                      case 7:
                        (u = c.ops.pop()), c.trys.pop();
                        continue;
                      default:
                        if (
                          !(o = (o = c.trys).length > 0 && o[o.length - 1]) &&
                          (6 === u[0] || 2 === u[0])
                        ) {
                          c = 0;
                          continue;
                        }
                        if (
                          3 === u[0] &&
                          (!o || (u[1] > o[0] && u[1] < o[3]))
                        ) {
                          c.label = u[1];
                          break;
                        }
                        if (6 === u[0] && c.label < o[1]) {
                          (c.label = o[1]), (o = u);
                          break;
                        }
                        if (o && c.label < o[2]) {
                          (c.label = o[2]), c.ops.push(u);
                          break;
                        }
                        o[2] && c.ops.pop(), c.trys.pop();
                        continue;
                    }
                    u = t.call(e, c);
                  } catch (e) {
                    (u = [6, e]), (r = 0);
                  } finally {
                    n = o = 0;
                  }
                if (5 & u[0]) throw u[1];
                return { value: u[0] ? u[1] : void 0, done: !0 };
              })([u, l]);
            };
          }
        },
        u = function(e) {
          var t = (e || {}).collapsed,
            n = void 0 === t || t,
            u = console.log,
            c = console.error,
            l = console.groupCollapsed,
            i = console.group,
            a = {
              log: u,
              group: n ? l : i,
              groupEnd: console.groupEnd,
              error: c
            };
          return function(e, t) {
            return r(void 0, void 0, void 0, function() {
              var n, r, u, c;
              return o(this, function(o) {
                switch (o.label) {
                  case 0:
                    (n = e.yabRequestInit),
                      (r = n.url),
                      (u = n.method),
                      a.group(
                        'ðŸ“– yab: %c' + u + ' %c' + r + ' %c@ ' + new Date(),
                        'color: #6f42c1;font-size: 14px;',
                        'color: #005cc5;font-size: 14px;',
                        'color: #666'
                      ),
                      (function(e, t) {
                        var n = t.yabRequestInit,
                          r = t.yabRequestInit,
                          o = r.url,
                          u = r.method,
                          c = r.data;
                        e.group('%cbefore fetch', 'color: #33b9f9'),
                          e.log('yabRequestInit:', n),
                          e.log('url:', o),
                          e.log('method:', u),
                          'post' === u && e.log('data:', c),
                          e.groupEnd();
                      })(a, e),
                      (o.label = 1);
                  case 1:
                    return o.trys.push([1, 3, 4, 5]), [4, t()];
                  case 2:
                    return (
                      o.sent(),
                      (function(e, t) {
                        var n = t.response;
                        e.group('%cafter fetch', 'color:#61bb64'),
                          e.log('response:', n),
                          e.log('ctx:', t),
                          e.groupEnd();
                      })(a, e),
                      [3, 5]
                    );
                  case 3:
                    return (
                      (c = o.sent()),
                      (function(e, t) {
                        e.error('Something wrong with fetch: ' + t);
                      })(a, c),
                      [3, 5]
                    );
                  case 4:
                    return a.groupEnd(), [7];
                  case 5:
                    return [2];
                }
              });
            });
          };
        };
    }
  ]);
});

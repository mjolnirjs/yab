!(function(e, t) {
  'object' == typeof exports && 'object' == typeof module
    ? (module.exports = t())
    : 'function' == typeof define && define.amd
    ? define([], t)
    : 'object' == typeof exports
    ? (exports['yab-fetch'] = t())
    : (e['yab-fetch'] = t());
})(window, function() {
  return (function(e) {
    var t = {};
    function r(n) {
      if (t[n]) return t[n].exports;
      var o = (t[n] = { i: n, l: !1, exports: {} });
      return e[n].call(o.exports, o, o.exports, r), (o.l = !0), o.exports;
    }
    return (
      (r.m = e),
      (r.c = t),
      (r.d = function(e, t, n) {
        r.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: n });
      }),
      (r.r = function(e) {
        'undefined' != typeof Symbol &&
          Symbol.toStringTag &&
          Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
          Object.defineProperty(e, '__esModule', { value: !0 });
      }),
      (r.t = function(e, t) {
        if ((1 & t && (e = r(e)), 8 & t)) return e;
        if (4 & t && 'object' == typeof e && e && e.__esModule) return e;
        var n = Object.create(null);
        if (
          (r.r(n),
          Object.defineProperty(n, 'default', { enumerable: !0, value: e }),
          2 & t && 'string' != typeof e)
        )
          for (var o in e)
            r.d(
              n,
              o,
              function(t) {
                return e[t];
              }.bind(null, o)
            );
        return n;
      }),
      (r.n = function(e) {
        var t =
          e && e.__esModule
            ? function() {
                return e.default;
              }
            : function() {
                return e;
              };
        return r.d(t, 'a', t), t;
      }),
      (r.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t);
      }),
      (r.p = ''),
      r((r.s = 6))
    );
  })([
    function(e, t, r) {
      'use strict';
      var n = Object.prototype.hasOwnProperty,
        o = Array.isArray,
        i = (function() {
          for (var e = [], t = 0; t < 256; ++t)
            e.push('%' + ((t < 16 ? '0' : '') + t.toString(16)).toUpperCase());
          return e;
        })(),
        a = function(e, t) {
          for (
            var r = t && t.plainObjects ? Object.create(null) : {}, n = 0;
            n < e.length;
            ++n
          )
            void 0 !== e[n] && (r[n] = e[n]);
          return r;
        };
      e.exports = {
        arrayToObject: a,
        assign: function(e, t) {
          return Object.keys(t).reduce(function(e, r) {
            return (e[r] = t[r]), e;
          }, e);
        },
        combine: function(e, t) {
          return [].concat(e, t);
        },
        compact: function(e) {
          for (
            var t = [{ obj: { o: e }, prop: 'o' }], r = [], n = 0;
            n < t.length;
            ++n
          )
            for (
              var i = t[n], a = i.obj[i.prop], s = Object.keys(a), u = 0;
              u < s.length;
              ++u
            ) {
              var c = s[u],
                l = a[c];
              'object' == typeof l &&
                null !== l &&
                -1 === r.indexOf(l) &&
                (t.push({ obj: a, prop: c }), r.push(l));
            }
          return (
            (function(e) {
              for (; e.length > 1; ) {
                var t = e.pop(),
                  r = t.obj[t.prop];
                if (o(r)) {
                  for (var n = [], i = 0; i < r.length; ++i)
                    void 0 !== r[i] && n.push(r[i]);
                  t.obj[t.prop] = n;
                }
              }
            })(t),
            e
          );
        },
        decode: function(e, t, r) {
          var n = e.replace(/\+/g, ' ');
          if ('iso-8859-1' === r) return n.replace(/%[0-9a-f]{2}/gi, unescape);
          try {
            return decodeURIComponent(n);
          } catch (e) {
            return n;
          }
        },
        encode: function(e, t, r) {
          if (0 === e.length) return e;
          var n = 'string' == typeof e ? e : String(e);
          if ('iso-8859-1' === r)
            return escape(n).replace(/%u[0-9a-f]{4}/gi, function(e) {
              return '%26%23' + parseInt(e.slice(2), 16) + '%3B';
            });
          for (var o = '', a = 0; a < n.length; ++a) {
            var s = n.charCodeAt(a);
            45 === s ||
            46 === s ||
            95 === s ||
            126 === s ||
            (s >= 48 && s <= 57) ||
            (s >= 65 && s <= 90) ||
            (s >= 97 && s <= 122)
              ? (o += n.charAt(a))
              : s < 128
              ? (o += i[s])
              : s < 2048
              ? (o += i[192 | (s >> 6)] + i[128 | (63 & s)])
              : s < 55296 || s >= 57344
              ? (o +=
                  i[224 | (s >> 12)] +
                  i[128 | ((s >> 6) & 63)] +
                  i[128 | (63 & s)])
              : ((a += 1),
                (s = 65536 + (((1023 & s) << 10) | (1023 & n.charCodeAt(a)))),
                (o +=
                  i[240 | (s >> 18)] +
                  i[128 | ((s >> 12) & 63)] +
                  i[128 | ((s >> 6) & 63)] +
                  i[128 | (63 & s)]));
          }
          return o;
        },
        isBuffer: function(e) {
          return !(
            !e ||
            'object' != typeof e ||
            !(
              e.constructor &&
              e.constructor.isBuffer &&
              e.constructor.isBuffer(e)
            )
          );
        },
        isRegExp: function(e) {
          return '[object RegExp]' === Object.prototype.toString.call(e);
        },
        merge: function e(t, r, i) {
          if (!r) return t;
          if ('object' != typeof r) {
            if (o(t)) t.push(r);
            else {
              if (!t || 'object' != typeof t) return [t, r];
              ((i && (i.plainObjects || i.allowPrototypes)) ||
                !n.call(Object.prototype, r)) &&
                (t[r] = !0);
            }
            return t;
          }
          if (!t || 'object' != typeof t) return [t].concat(r);
          var s = t;
          return (
            o(t) && !o(r) && (s = a(t, i)),
            o(t) && o(r)
              ? (r.forEach(function(r, o) {
                  if (n.call(t, o)) {
                    var a = t[o];
                    a && 'object' == typeof a && r && 'object' == typeof r
                      ? (t[o] = e(a, r, i))
                      : t.push(r);
                  } else t[o] = r;
                }),
                t)
              : Object.keys(r).reduce(function(t, o) {
                  var a = r[o];
                  return n.call(t, o) ? (t[o] = e(t[o], a, i)) : (t[o] = a), t;
                }, s)
          );
        }
      };
    },
    function(e, t, r) {
      'use strict';
      var n = String.prototype.replace,
        o = /%20/g;
      e.exports = {
        default: 'RFC3986',
        formatters: {
          RFC1738: function(e) {
            return n.call(e, o, '+');
          },
          RFC3986: function(e) {
            return e;
          }
        },
        RFC1738: 'RFC1738',
        RFC3986: 'RFC3986'
      };
    },
    function(e, t) {},
    function(e, t, r) {
      'use strict';
      var n = r(4),
        o = r.n(n),
        i = r(5),
        a = function() {
          return (a =
            Object.assign ||
            function(e) {
              for (var t, r = 1, n = arguments.length; r < n; r++)
                for (var o in (t = arguments[r]))
                  Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
              return e;
            }).apply(this, arguments);
        };
      function s() {
        for (var e, t = [], r = 0; r < arguments.length; r++)
          t[r] = arguments[r];
        t.forEach(function(t) {
          t && t.headers && ((e = e || {}), Object.assign(e, t.headers));
        });
        var n = Object.assign.apply(Object, [{}].concat(t, [{ headers: e }])),
          o = (function(e) {
            var t,
              r,
              n,
              o =
                ((n = e.url),
                /^([a-z][a-z\d+\-.]*:)?\/\//i.test(n) || null == e.baseURL
                  ? e.url
                  : ((t = e.baseURL),
                    (r = e.url),
                    t.replace(/\/$/, '') + '/' + r.replace(/^\//, '')));
            return null == e.params
              ? o
              : (function(e, t) {
                  return e + (e.includes('?') ? '&' : '?') + t;
                })(o, i.stringify(e.params));
          })(n);
        return a({}, n, { url: o });
      }
      function u(e) {
        var t,
          r = {},
          n = e.data;
        return (
          null != n &&
            ((t = n),
            'undefined' != typeof FormData && t instanceof FormData
              ? (r.body = n)
              : (function(e) {
                  return null !== e && 'object' == typeof e;
                })(n) && (r.body = JSON.stringify(n))),
          [
            'cache',
            'credentials',
            'headers',
            'integrity',
            'keepalive',
            'method',
            'mode',
            'redirect',
            'referrer',
            'referrerPolicy',
            'signal',
            'window',
            'body'
          ].forEach(function(t) {
            e[t] && (r[t] = e[t]);
          }),
          r
        );
      }
      function c(e) {
        var t = e.error || new Error(e.errorMessage);
        return (
          Object.assign(t, {
            yabRequestInit: e.yabRequestInit,
            requestInit: e.requestInit,
            response: e.response
          }),
          t
        );
      }
      var l = (function() {
        function e(e) {
          this._yabRequestInit = e;
        }
        return (
          Object.defineProperty(e.prototype, 'yabRequestInit', {
            get: function() {
              return this._yabRequestInit;
            },
            set: function(e) {
              this._yabRequestInit = e;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, 'requestInit', {
            get: function() {
              if (null == this._requestInit)
                throw new Error('RequestInit is not ready');
              return this._requestInit;
            },
            set: function(e) {
              this._requestInit = e;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, 'response', {
            get: function() {
              if (null == this._response)
                throw new Error('Response is not ready');
              return this._response.clone();
            },
            set: function(e) {
              this._response = e;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, 'error', {
            get: function() {
              return this._error;
            },
            set: function(e) {
              this._error = e;
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.throw = function(e) {
            throw c({
              errorMessage: e,
              yabRequestInit: this._yabRequestInit,
              requestInit: this._requestInit,
              response: this._response
            });
          }),
          e
        );
      })();
      var f = {
          responseType: 'json',
          resolveData: function(e) {
            switch (e.yabRequestInit.responseType) {
              case 'json':
                return e.json;
              case 'text':
                return e.text;
              case 'blob':
                return e.blob;
              case 'arrayBuffer':
                return e.arrayBuffer;
              case 'formData':
                return e.formData;
              case 'auto':
              default:
                return e;
            }
          },
          validateResponseStatus: function(e) {
            return e.ok;
          }
        },
        p = function(e, t, r, n) {
          return new (r || (r = Promise))(function(o, i) {
            function a(e) {
              try {
                u(n.next(e));
              } catch (e) {
                i(e);
              }
            }
            function s(e) {
              try {
                u(n.throw(e));
              } catch (e) {
                i(e);
              }
            }
            function u(e) {
              e.done
                ? o(e.value)
                : new r(function(t) {
                    t(e.value);
                  }).then(a, s);
            }
            u((n = n.apply(e, t || [])).next());
          });
        },
        d = function(e, t) {
          var r,
            n,
            o,
            i,
            a = {
              label: 0,
              sent: function() {
                if (1 & o[0]) throw o[1];
                return o[1];
              },
              trys: [],
              ops: []
            };
          return (
            (i = { next: s(0), throw: s(1), return: s(2) }),
            'function' == typeof Symbol &&
              (i[Symbol.iterator] = function() {
                return this;
              }),
            i
          );
          function s(i) {
            return function(s) {
              return (function(i) {
                if (r) throw new TypeError('Generator is already executing.');
                for (; a; )
                  try {
                    if (
                      ((r = 1),
                      n &&
                        (o =
                          2 & i[0]
                            ? n.return
                            : i[0]
                            ? n.throw || ((o = n.return) && o.call(n), 0)
                            : n.next) &&
                        !(o = o.call(n, i[1])).done)
                    )
                      return o;
                    switch (((n = 0), o && (i = [2 & i[0], o.value]), i[0])) {
                      case 0:
                      case 1:
                        o = i;
                        break;
                      case 4:
                        return a.label++, { value: i[1], done: !1 };
                      case 5:
                        a.label++, (n = i[1]), (i = [0]);
                        continue;
                      case 7:
                        (i = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(o = (o = a.trys).length > 0 && o[o.length - 1]) &&
                          (6 === i[0] || 2 === i[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === i[0] &&
                          (!o || (i[1] > o[0] && i[1] < o[3]))
                        ) {
                          a.label = i[1];
                          break;
                        }
                        if (6 === i[0] && a.label < o[1]) {
                          (a.label = o[1]), (o = i);
                          break;
                        }
                        if (o && a.label < o[2]) {
                          (a.label = o[2]), a.ops.push(i);
                          break;
                        }
                        o[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    i = t.call(e, a);
                  } catch (e) {
                    (i = [6, e]), (n = 0);
                  } finally {
                    r = o = 0;
                  }
                if (5 & i[0]) throw i[1];
                return { value: i[0] ? i[1] : void 0, done: !0 };
              })([i, s]);
            };
          }
        };
      function y(e) {
        return p(this, void 0, void 0, function() {
          var t, r, n, o, i, a, s, u;
          return d(this, function(c) {
            switch (c.label) {
              case 0:
                switch (
                  ((t = e.yabRequestInit), (r = e.response), t.responseType)
                ) {
                  case 'json':
                    return [3, 1];
                  case 'text':
                    return [3, 3];
                  case 'blob':
                    return [3, 5];
                  case 'arrayBuffer':
                    return [3, 7];
                  case 'formData':
                    return [3, 9];
                  case 'auto':
                    return [3, 11];
                }
                return [3, 11];
              case 1:
                return (n = e), [4, r.json()];
              case 2:
                return (n.json = c.sent()), [3, 15];
              case 3:
                return (o = e), [4, r.text()];
              case 4:
                return (o.text = c.sent()), [3, 15];
              case 5:
                return (i = e), [4, r.blob()];
              case 6:
                return (i.blob = c.sent()), [3, 15];
              case 7:
                return (a = e), [4, r.arrayBuffer()];
              case 8:
                return (a.arrayBuffer = c.sent()), [3, 15];
              case 9:
                return (s = e), [4, r.formData()];
              case 10:
                return (s.formData = c.sent()), [3, 15];
              case 11:
                return c.trys.push([11, 13, , 14]), (u = e), [4, r.json()];
              case 12:
                return (u.json = c.sent()), [3, 14];
              case 13:
                return c.sent(), [3, 14];
              case 14:
                return [3, 15];
              case 15:
                return [2];
            }
          });
        });
      }
      r.d(t, 'a', function() {
        return g;
      });
      var h = function() {
          return (h =
            Object.assign ||
            function(e) {
              for (var t, r = 1, n = arguments.length; r < n; r++)
                for (var o in (t = arguments[r]))
                  Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
              return e;
            }).apply(this, arguments);
        },
        b = function(e, t, r, n) {
          return new (r || (r = Promise))(function(o, i) {
            function a(e) {
              try {
                u(n.next(e));
              } catch (e) {
                i(e);
              }
            }
            function s(e) {
              try {
                u(n.throw(e));
              } catch (e) {
                i(e);
              }
            }
            function u(e) {
              e.done
                ? o(e.value)
                : new r(function(t) {
                    t(e.value);
                  }).then(a, s);
            }
            u((n = n.apply(e, t || [])).next());
          });
        },
        m = function(e, t) {
          var r,
            n,
            o,
            i,
            a = {
              label: 0,
              sent: function() {
                if (1 & o[0]) throw o[1];
                return o[1];
              },
              trys: [],
              ops: []
            };
          return (
            (i = { next: s(0), throw: s(1), return: s(2) }),
            'function' == typeof Symbol &&
              (i[Symbol.iterator] = function() {
                return this;
              }),
            i
          );
          function s(i) {
            return function(s) {
              return (function(i) {
                if (r) throw new TypeError('Generator is already executing.');
                for (; a; )
                  try {
                    if (
                      ((r = 1),
                      n &&
                        (o =
                          2 & i[0]
                            ? n.return
                            : i[0]
                            ? n.throw || ((o = n.return) && o.call(n), 0)
                            : n.next) &&
                        !(o = o.call(n, i[1])).done)
                    )
                      return o;
                    switch (((n = 0), o && (i = [2 & i[0], o.value]), i[0])) {
                      case 0:
                      case 1:
                        o = i;
                        break;
                      case 4:
                        return a.label++, { value: i[1], done: !1 };
                      case 5:
                        a.label++, (n = i[1]), (i = [0]);
                        continue;
                      case 7:
                        (i = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(o = (o = a.trys).length > 0 && o[o.length - 1]) &&
                          (6 === i[0] || 2 === i[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === i[0] &&
                          (!o || (i[1] > o[0] && i[1] < o[3]))
                        ) {
                          a.label = i[1];
                          break;
                        }
                        if (6 === i[0] && a.label < o[1]) {
                          (a.label = o[1]), (o = i);
                          break;
                        }
                        if (o && a.label < o[2]) {
                          (a.label = o[2]), a.ops.push(i);
                          break;
                        }
                        o[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    i = t.call(e, a);
                  } catch (e) {
                    (i = [6, e]), (n = 0);
                  } finally {
                    r = o = 0;
                  }
                if (5 & i[0]) throw i[1];
                return { value: i[0] ? i[1] : void 0, done: !0 };
              })([i, s]);
            };
          }
        },
        v = function(e) {
          var t = this;
          (this.fetch = function(e, r) {
            return b(t, void 0, void 0, function() {
              var t, n, i;
              return m(this, function(a) {
                switch (a.label) {
                  case 0:
                    return (
                      (t = s(h({}, f), this._requestInit, r, { url: e })),
                      (n = new l(t)),
                      (i = (function(e) {
                        var t = this,
                          r = window.fetch;
                        return function(n) {
                          return p(t, void 0, void 0, function() {
                            var t, o;
                            return d(this, function(i) {
                              switch (i.label) {
                                case 0:
                                  i.trys.push([0, 6, , 7]),
                                    (t = u(e)),
                                    e.before && (t = e.before(t)),
                                    (n.requestInit = t),
                                    (o = void 0),
                                    (i.label = 1);
                                case 1:
                                  return (
                                    i.trys.push([1, 3, , 4]), [4, r(e.url, t)]
                                  );
                                case 2:
                                  return (
                                    (o = i.sent()),
                                    e.after && (o = e.after(o)),
                                    (n.response = o),
                                    [3, 4]
                                  );
                                case 3:
                                  throw c({
                                    error: i.sent(),
                                    yabRequestInit: e,
                                    requestInit: t
                                  });
                                case 4:
                                  if (
                                    e.validateResponseStatus &&
                                    !e.validateResponseStatus(o)
                                  )
                                    throw c({
                                      errorMessage:
                                        'Request failed with status code ' +
                                        o.status,
                                      yabRequestInit: e,
                                      requestInit: t,
                                      response: o
                                    });
                                  return [4, y(n)];
                                case 5:
                                  return i.sent(), [3, 7];
                                case 6:
                                  throw i.sent();
                                case 7:
                                  return [2];
                              }
                            });
                          });
                        };
                      })(t)),
                      [4, o()(this._middlewares.concat([i]))(n)]
                    );
                  case 1:
                    return a.sent(), [2, t.resolveData(n)];
                }
              });
            });
          }),
            (this.use = function(e) {
              var r;
              return (
                Array.isArray(e)
                  ? (r = t._middlewares).push.apply(r, e)
                  : t._middlewares.push(e),
                t
              );
            }),
            (this._middlewares = []),
            (this._requestInit = e);
        };
      function g(e) {
        var t = new v(e),
          r = t.fetch;
        return (
          ['get', 'head', 'delete'].forEach(function(e) {
            r[e] = function(t, n) {
              return r(t, h({ method: e, responseType: 'json' }, n));
            };
          }),
          ['post', 'put', 'patch'].forEach(function(e) {
            r[e] = function(t, n, o) {
              return r(t, h({ method: e, data: n }, o));
            };
          }),
          (r.use = t.use),
          r
        );
      }
    },
    function(e, t, r) {
      'use strict';
      e.exports = function(e) {
        if (!Array.isArray(e))
          throw new TypeError('Middleware stack must be an array!');
        for (const t of e)
          if ('function' != typeof t)
            throw new TypeError('Middleware must be composed of functions!');
        return function(t, r) {
          let n = -1;
          return (function o(i) {
            if (i <= n)
              return Promise.reject(new Error('next() called multiple times'));
            n = i;
            let a = e[i];
            i === e.length && (a = r);
            if (!a) return Promise.resolve();
            try {
              return Promise.resolve(a(t, o.bind(null, i + 1)));
            } catch (e) {
              return Promise.reject(e);
            }
          })(0);
        };
      };
    },
    function(e, t, r) {
      'use strict';
      var n = r(8),
        o = r(9),
        i = r(1);
      e.exports = { formats: i, parse: o, stringify: n };
    },
    function(e, t, r) {
      e.exports = r(7);
    },
    function(e, t, r) {
      'use strict';
      r.r(t);
      var n = r(3);
      r.d(t, 'createFetch', function() {
        return n.a;
      });
      var o = r(2);
      for (var i in o)
        ['createFetch', 'default'].indexOf(i) < 0 &&
          (function(e) {
            r.d(t, e, function() {
              return o[e];
            });
          })(i);
    },
    function(e, t, r) {
      'use strict';
      var n = r(0),
        o = r(1),
        i = Object.prototype.hasOwnProperty,
        a = {
          brackets: function(e) {
            return e + '[]';
          },
          comma: 'comma',
          indices: function(e, t) {
            return e + '[' + t + ']';
          },
          repeat: function(e) {
            return e;
          }
        },
        s = Array.isArray,
        u = Array.prototype.push,
        c = function(e, t) {
          u.apply(e, s(t) ? t : [t]);
        },
        l = Date.prototype.toISOString,
        f = {
          addQueryPrefix: !1,
          allowDots: !1,
          charset: 'utf-8',
          charsetSentinel: !1,
          delimiter: '&',
          encode: !0,
          encoder: n.encode,
          encodeValuesOnly: !1,
          formatter: o.formatters[o.default],
          indices: !1,
          serializeDate: function(e) {
            return l.call(e);
          },
          skipNulls: !1,
          strictNullHandling: !1
        },
        p = function e(t, r, o, i, a, u, l, p, d, y, h, b, m) {
          var v = t;
          if (
            ('function' == typeof l
              ? (v = l(r, v))
              : v instanceof Date
              ? (v = y(v))
              : 'comma' === o && s(v) && (v = v.join(',')),
            null === v)
          ) {
            if (i) return u && !b ? u(r, f.encoder, m) : r;
            v = '';
          }
          if (
            'string' == typeof v ||
            'number' == typeof v ||
            'boolean' == typeof v ||
            n.isBuffer(v)
          )
            return u
              ? [h(b ? r : u(r, f.encoder, m)) + '=' + h(u(v, f.encoder, m))]
              : [h(r) + '=' + h(String(v))];
          var g,
            w = [];
          if (void 0 === v) return w;
          if (s(l)) g = l;
          else {
            var j = Object.keys(v);
            g = p ? j.sort(p) : j;
          }
          for (var O = 0; O < g.length; ++O) {
            var x = g[O];
            (a && null === v[x]) ||
              (s(v)
                ? c(
                    w,
                    e(
                      v[x],
                      'function' == typeof o ? o(r, x) : r,
                      o,
                      i,
                      a,
                      u,
                      l,
                      p,
                      d,
                      y,
                      h,
                      b,
                      m
                    )
                  )
                : c(
                    w,
                    e(
                      v[x],
                      r + (d ? '.' + x : '[' + x + ']'),
                      o,
                      i,
                      a,
                      u,
                      l,
                      p,
                      d,
                      y,
                      h,
                      b,
                      m
                    )
                  ));
          }
          return w;
        };
      e.exports = function(e, t) {
        var r,
          n = e,
          u = (function(e) {
            if (!e) return f;
            if (
              null !== e.encoder &&
              void 0 !== e.encoder &&
              'function' != typeof e.encoder
            )
              throw new TypeError('Encoder has to be a function.');
            var t = e.charset || f.charset;
            if (
              void 0 !== e.charset &&
              'utf-8' !== e.charset &&
              'iso-8859-1' !== e.charset
            )
              throw new TypeError(
                'The charset option must be either utf-8, iso-8859-1, or undefined'
              );
            var r = o.default;
            if (void 0 !== e.format) {
              if (!i.call(o.formatters, e.format))
                throw new TypeError('Unknown format option provided.');
              r = e.format;
            }
            var n = o.formatters[r],
              a = f.filter;
            return (
              ('function' == typeof e.filter || s(e.filter)) && (a = e.filter),
              {
                addQueryPrefix:
                  'boolean' == typeof e.addQueryPrefix
                    ? e.addQueryPrefix
                    : f.addQueryPrefix,
                allowDots: void 0 === e.allowDots ? f.allowDots : !!e.allowDots,
                charset: t,
                charsetSentinel:
                  'boolean' == typeof e.charsetSentinel
                    ? e.charsetSentinel
                    : f.charsetSentinel,
                delimiter: void 0 === e.delimiter ? f.delimiter : e.delimiter,
                encode: 'boolean' == typeof e.encode ? e.encode : f.encode,
                encoder: 'function' == typeof e.encoder ? e.encoder : f.encoder,
                encodeValuesOnly:
                  'boolean' == typeof e.encodeValuesOnly
                    ? e.encodeValuesOnly
                    : f.encodeValuesOnly,
                filter: a,
                formatter: n,
                serializeDate:
                  'function' == typeof e.serializeDate
                    ? e.serializeDate
                    : f.serializeDate,
                skipNulls:
                  'boolean' == typeof e.skipNulls ? e.skipNulls : f.skipNulls,
                sort: 'function' == typeof e.sort ? e.sort : null,
                strictNullHandling:
                  'boolean' == typeof e.strictNullHandling
                    ? e.strictNullHandling
                    : f.strictNullHandling
              }
            );
          })(t);
        'function' == typeof u.filter
          ? (n = (0, u.filter)('', n))
          : s(u.filter) && (r = u.filter);
        var l,
          d = [];
        if ('object' != typeof n || null === n) return '';
        l =
          t && t.arrayFormat in a
            ? t.arrayFormat
            : t && 'indices' in t
            ? t.indices
              ? 'indices'
              : 'repeat'
            : 'indices';
        var y = a[l];
        r || (r = Object.keys(n)), u.sort && r.sort(u.sort);
        for (var h = 0; h < r.length; ++h) {
          var b = r[h];
          (u.skipNulls && null === n[b]) ||
            c(
              d,
              p(
                n[b],
                b,
                y,
                u.strictNullHandling,
                u.skipNulls,
                u.encode ? u.encoder : null,
                u.filter,
                u.sort,
                u.allowDots,
                u.serializeDate,
                u.formatter,
                u.encodeValuesOnly,
                u.charset
              )
            );
        }
        var m = d.join(u.delimiter),
          v = !0 === u.addQueryPrefix ? '?' : '';
        return (
          u.charsetSentinel &&
            ('iso-8859-1' === u.charset
              ? (v += 'utf8=%26%2310003%3B&')
              : (v += 'utf8=%E2%9C%93&')),
          m.length > 0 ? v + m : ''
        );
      };
    },
    function(e, t, r) {
      'use strict';
      var n = r(0),
        o = Object.prototype.hasOwnProperty,
        i = {
          allowDots: !1,
          allowPrototypes: !1,
          arrayLimit: 20,
          charset: 'utf-8',
          charsetSentinel: !1,
          comma: !1,
          decoder: n.decode,
          delimiter: '&',
          depth: 5,
          ignoreQueryPrefix: !1,
          interpretNumericEntities: !1,
          parameterLimit: 1e3,
          parseArrays: !0,
          plainObjects: !1,
          strictNullHandling: !1
        },
        a = function(e) {
          return e.replace(/&#(\d+);/g, function(e, t) {
            return String.fromCharCode(parseInt(t, 10));
          });
        },
        s = function(e, t, r) {
          if (e) {
            var n = r.allowDots ? e.replace(/\.([^.[]+)/g, '[$1]') : e,
              i = /(\[[^[\]]*])/g,
              a = /(\[[^[\]]*])/.exec(n),
              s = a ? n.slice(0, a.index) : n,
              u = [];
            if (s) {
              if (
                !r.plainObjects &&
                o.call(Object.prototype, s) &&
                !r.allowPrototypes
              )
                return;
              u.push(s);
            }
            for (var c = 0; null !== (a = i.exec(n)) && c < r.depth; ) {
              if (
                ((c += 1),
                !r.plainObjects &&
                  o.call(Object.prototype, a[1].slice(1, -1)) &&
                  !r.allowPrototypes)
              )
                return;
              u.push(a[1]);
            }
            return (
              a && u.push('[' + n.slice(a.index) + ']'),
              (function(e, t, r) {
                for (var n = t, o = e.length - 1; o >= 0; --o) {
                  var i,
                    a = e[o];
                  if ('[]' === a && r.parseArrays) i = [].concat(n);
                  else {
                    i = r.plainObjects ? Object.create(null) : {};
                    var s =
                        '[' === a.charAt(0) && ']' === a.charAt(a.length - 1)
                          ? a.slice(1, -1)
                          : a,
                      u = parseInt(s, 10);
                    r.parseArrays || '' !== s
                      ? !isNaN(u) &&
                        a !== s &&
                        String(u) === s &&
                        u >= 0 &&
                        r.parseArrays &&
                        u <= r.arrayLimit
                        ? ((i = [])[u] = n)
                        : (i[s] = n)
                      : (i = { 0: n });
                  }
                  n = i;
                }
                return n;
              })(u, t, r)
            );
          }
        };
      e.exports = function(e, t) {
        var r = (function(e) {
          if (!e) return i;
          if (
            null !== e.decoder &&
            void 0 !== e.decoder &&
            'function' != typeof e.decoder
          )
            throw new TypeError('Decoder has to be a function.');
          if (
            void 0 !== e.charset &&
            'utf-8' !== e.charset &&
            'iso-8859-1' !== e.charset
          )
            throw new Error(
              'The charset option must be either utf-8, iso-8859-1, or undefined'
            );
          var t = void 0 === e.charset ? i.charset : e.charset;
          return {
            allowDots: void 0 === e.allowDots ? i.allowDots : !!e.allowDots,
            allowPrototypes:
              'boolean' == typeof e.allowPrototypes
                ? e.allowPrototypes
                : i.allowPrototypes,
            arrayLimit:
              'number' == typeof e.arrayLimit ? e.arrayLimit : i.arrayLimit,
            charset: t,
            charsetSentinel:
              'boolean' == typeof e.charsetSentinel
                ? e.charsetSentinel
                : i.charsetSentinel,
            comma: 'boolean' == typeof e.comma ? e.comma : i.comma,
            decoder: 'function' == typeof e.decoder ? e.decoder : i.decoder,
            delimiter:
              'string' == typeof e.delimiter || n.isRegExp(e.delimiter)
                ? e.delimiter
                : i.delimiter,
            depth: 'number' == typeof e.depth ? e.depth : i.depth,
            ignoreQueryPrefix: !0 === e.ignoreQueryPrefix,
            interpretNumericEntities:
              'boolean' == typeof e.interpretNumericEntities
                ? e.interpretNumericEntities
                : i.interpretNumericEntities,
            parameterLimit:
              'number' == typeof e.parameterLimit
                ? e.parameterLimit
                : i.parameterLimit,
            parseArrays: !1 !== e.parseArrays,
            plainObjects:
              'boolean' == typeof e.plainObjects
                ? e.plainObjects
                : i.plainObjects,
            strictNullHandling:
              'boolean' == typeof e.strictNullHandling
                ? e.strictNullHandling
                : i.strictNullHandling
          };
        })(t);
        if ('' === e || null == e)
          return r.plainObjects ? Object.create(null) : {};
        for (
          var u =
              'string' == typeof e
                ? (function(e, t) {
                    var r,
                      s = {},
                      u = t.ignoreQueryPrefix ? e.replace(/^\?/, '') : e,
                      c =
                        t.parameterLimit === 1 / 0 ? void 0 : t.parameterLimit,
                      l = u.split(t.delimiter, c),
                      f = -1,
                      p = t.charset;
                    if (t.charsetSentinel)
                      for (r = 0; r < l.length; ++r)
                        0 === l[r].indexOf('utf8=') &&
                          ('utf8=%E2%9C%93' === l[r]
                            ? (p = 'utf-8')
                            : 'utf8=%26%2310003%3B' === l[r] &&
                              (p = 'iso-8859-1'),
                          (f = r),
                          (r = l.length));
                    for (r = 0; r < l.length; ++r)
                      if (r !== f) {
                        var d,
                          y,
                          h = l[r],
                          b = h.indexOf(']='),
                          m = -1 === b ? h.indexOf('=') : b + 1;
                        -1 === m
                          ? ((d = t.decoder(h, i.decoder, p)),
                            (y = t.strictNullHandling ? null : ''))
                          : ((d = t.decoder(h.slice(0, m), i.decoder, p)),
                            (y = t.decoder(h.slice(m + 1), i.decoder, p))),
                          y &&
                            t.interpretNumericEntities &&
                            'iso-8859-1' === p &&
                            (y = a(y)),
                          y &&
                            t.comma &&
                            y.indexOf(',') > -1 &&
                            (y = y.split(',')),
                          o.call(s, d)
                            ? (s[d] = n.combine(s[d], y))
                            : (s[d] = y);
                      }
                    return s;
                  })(e, r)
                : e,
            c = r.plainObjects ? Object.create(null) : {},
            l = Object.keys(u),
            f = 0;
          f < l.length;
          ++f
        ) {
          var p = l[f],
            d = s(p, u[p], r);
          c = n.merge(c, d, r);
        }
        return n.compact(c);
      };
    }
  ]);
});
